{"name": "test_Registered_Num", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_case.Register_case.TestRegister object at 0x00000286A937E7F0>\n\n    @allure.story(\"参数填写不正确，注册失败\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"已经注册过的手机号\")\n    def test_Registered_Num(self):\n        def_name = sys._getframe().f_code.co_name\n        test_assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s：\\n\", def_name)\n        base_url = config.adss.server_ip()\n        url = base_url + 'register'\n        data = {\n            \"password\": \"123456Aa\",\n            \"phone\": \"18801053303\",\n            \"v_code\": \"666666\"\n        }\n        token = AutoDL_auth.change_ticket()\n        # 请求头 授权\n        headers = {\"Authorization\": token}\n        r = RequestsHandler().post_Req(url=url, data=data, headers=headers)\n        code1 = r.status_code\n        str_response = r.content.decode()\n        json_response = dict_style(str_response)\n        test_assert.assert_code(code1, 200)\n>       test_assert.assert_body(json_response, 'msg', '手机号已注册，请登录')\n\n..\\test_case\\Register_case.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x00000286A937E160>\nbody = {'code': 'AlreadyExist', 'data': None, 'debug_error': '', 'msg': '手机号已注册'}\nbody_msg = 'msg', expected_msg = '手机号已注册，请登录'\n\n    def assert_body(self, body, body_msg, expected_msg):\n        \"\"\"\n        验证response body任意属性的值\n        :param body:\n        :param body_msg:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            msg = body[body_msg]\n>           assert msg == expected_msg\nE           AssertionError\n\n..\\common\\Assert.py:46: AssertionError"}, "description": "已经注册过的手机号", "attachments": [{"name": "log", "source": "44c9b6c8-2c34-4faa-aea6-753432114da1-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "32e011c8-a59f-4969-ae84-f0ea43a2ddeb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a6a64281-6f8d-4542-9e96-dc3e01d134f3-attachment.txt", "type": "text/plain"}], "start": 1636970094904, "stop": 1636970095076, "uuid": "961af8d4-e6af-4be9-a44d-2edf684a18b0", "historyId": "7e036e58580f332cbdce31d56c1ba254", "testCaseId": "c9cc7abb9740002c5f7b8e33fe808994", "fullName": "test_case.Register_case.TestRegister#test_Registered_Num", "labels": [{"name": "severity", "value": "critical"}, {"name": "story", "value": "参数填写不正确，注册失败"}, {"name": "feature", "value": "注册模块"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "Register_case"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "DESKTOP-KSOAST3"}, {"name": "thread", "value": "20580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.Register_case"}]}