{
  "uid" : "1ebc3ee9378daf11",
  "name" : "test_CodeError",
  "fullName" : "test_case.Register_case.TestRegister#test_CodeError",
  "historyId" : "c47f0c1c6ff9bd2405cb2124baf4470c",
  "time" : {
    "start" : 1629283725228,
    "stop" : 1629283725421,
    "duration" : 193
  },
  "description" : "验证码输入错误",
  "descriptionHtml" : "<p>验证码输入错误</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_case.Register_case.TestRegister object at 0x000002E06EB7AFA0>\n\n    @allure.story(\"参数填写不正确，注册失败\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"验证码输入错误\")\n    def test_CodeError(self):\n        def_name = sys._getframe().f_code.co_name\n        test_assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s：\\n\", def_name)\n        base_url = config.adss.server_ip()\n        num = Random_number.main()\n        url = base_url + 'register'\n        data = {\n            \"password\": \"123456Aa\",\n            \"phone\": num,\n            \"v_code\": \"12345\"\n        }\n        token = AutoDL_auth.change_ticket()\n        # 请求头 授权\n        headers = {\n            \"Authorization\": token\n        }\n        r = RequestsHandler().post_Req(url=url, data=data, headers=headers)\n        code1 = r.status_code\n        str_response = r.content.decode()\n        json_response = dict_style(str_response)\n        test_assert.assert_code(code1, 200)\n>       test_assert.assert_body(json_response, 'msg', '请重新获取短信验证码')\n\n..\\test_case\\Register_case.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x000002E06EB7AAF0>\nbody = {'code': 'InternalError', 'data': None, 'debug_error': '', 'msg': '短信验证码错误'}\nbody_msg = 'msg', expected_msg = '请重新获取短信验证码'\n\n    def assert_body(self, body, body_msg, expected_msg):\n        \"\"\"\n        验证response body任意属性的值\n        :param body:\n        :param body_msg:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            msg = body[body_msg]\n>           assert msg == expected_msg\nE           AssertionError\n\n..\\common\\Assert.py:46: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "验证码输入错误",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_case.Register_case.TestRegister object at 0x000002E06EB7AFA0>\n\n    @allure.story(\"参数填写不正确，注册失败\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"验证码输入错误\")\n    def test_CodeError(self):\n        def_name = sys._getframe().f_code.co_name\n        test_assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s：\\n\", def_name)\n        base_url = config.adss.server_ip()\n        num = Random_number.main()\n        url = base_url + 'register'\n        data = {\n            \"password\": \"123456Aa\",\n            \"phone\": num,\n            \"v_code\": \"12345\"\n        }\n        token = AutoDL_auth.change_ticket()\n        # 请求头 授权\n        headers = {\n            \"Authorization\": token\n        }\n        r = RequestsHandler().post_Req(url=url, data=data, headers=headers)\n        code1 = r.status_code\n        str_response = r.content.decode()\n        json_response = dict_style(str_response)\n        test_assert.assert_code(code1, 200)\n>       test_assert.assert_body(json_response, 'msg', '请重新获取短信验证码')\n\n..\\test_case\\Register_case.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x000002E06EB7AAF0>\nbody = {'code': 'InternalError', 'data': None, 'debug_error': '', 'msg': '短信验证码错误'}\nbody_msg = 'msg', expected_msg = '请重新获取短信验证码'\n\n    def assert_body(self, body, body_msg, expected_msg):\n        \"\"\"\n        验证response body任意属性的值\n        :param body:\n        :param body_msg:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            msg = body[body_msg]\n>           assert msg == expected_msg\nE           AssertionError\n\n..\\common\\Assert.py:46: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "17aa744ec97a7a81",
      "name" : "log",
      "source" : "17aa744ec97a7a81.txt",
      "type" : "text/plain",
      "size" : 333
    }, {
      "uid" : "399eee1977b96d19",
      "name" : "stdout",
      "source" : "399eee1977b96d19.txt",
      "type" : "text/plain",
      "size" : 504
    }, {
      "uid" : "4484b02b9308c948",
      "name" : "stderr",
      "source" : "4484b02b9308c948.txt",
      "type" : "text/plain",
      "size" : 472
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "参数填写不正确，注册失败"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "注册模块"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "Register_case"
  }, {
    "name" : "subSuite",
    "value" : "TestRegister"
  }, {
    "name" : "host",
    "value" : "DESKTOP-KSOAST3"
  }, {
    "name" : "thread",
    "value" : "8848-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.Register_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "1ebc3ee9378daf11.json",
  "parameterValues" : [ ]
}