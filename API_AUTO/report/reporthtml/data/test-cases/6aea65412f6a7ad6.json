{
  "uid" : "6aea65412f6a7ad6",
  "name" : "test_code_login",
  "fullName" : "test_case.Login_case.TestLogin#test_code_login",
  "historyId" : "fcece65b7d268ee02723b0a6dff2528a",
  "time" : {
    "start" : 1629186622987,
    "stop" : 1629186623004,
    "duration" : 17
  },
  "description" : "手机号和短信验证码填写正确，正常登录",
  "descriptionHtml" : "<p>手机号和短信验证码填写正确，正常登录</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <test_case.Login_case.TestLogin object at 0x00000146A60FC5B0>\n\n    @allure.story(\"短信登录\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"手机号和短信验证码填写正确，正常登录\")\n    def test_code_login(self):\n        def_name = sys._getframe().f_code.co_name\n        test_assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s：\\n\", def_name)\n        base_url = config.adss.server_ip()\n        url = base_url + 'fast_login'\n        headers = {\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n        }\n        r = requests.post(url=url, json={\"phone\": \"18801053303\", \"v_code\": \"666666\"}, headers=headers)\n        code1 = r.status_code\n        # 获取接口返回信息\n        str_response = r.content.decode()\n        # 读取json\n        json_response = dict_style(str_response)\n        # 校验状态码是否是200\n        test_assert.assert_code(code1, 200)\n        # 校验返回信息是否与预期信息一致\n>       test_assert.assert_body(json_response, 'msg', '')\n\n..\\test_case\\Login_case.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x00000146A6099700>\nbody = {'code': 'RequestParameterIsWrong', 'data': None, 'debug_error': '', 'msg': '连续超过 5 次错误，请于 15 分钟后重新登录'}\nbody_msg = 'msg', expected_msg = ''\n\n    def assert_body(self, body, body_msg, expected_msg):\n        \"\"\"\n        验证response body任意属性的值\n        :param body:\n        :param body_msg:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            msg = body[body_msg]\n>           assert msg == expected_msg\nE           AssertionError\n\n..\\common\\Assert.py:46: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "手机号和短信验证码填写正确，正常登录",
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <test_case.Login_case.TestLogin object at 0x00000146A60FC5B0>\n\n    @allure.story(\"短信登录\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"手机号和短信验证码填写正确，正常登录\")\n    def test_code_login(self):\n        def_name = sys._getframe().f_code.co_name\n        test_assert = Assert.Assertions(def_name)\n        logger.info(\"开始执行脚本%s：\\n\", def_name)\n        base_url = config.adss.server_ip()\n        url = base_url + 'fast_login'\n        headers = {\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n        }\n        r = requests.post(url=url, json={\"phone\": \"18801053303\", \"v_code\": \"666666\"}, headers=headers)\n        code1 = r.status_code\n        # 获取接口返回信息\n        str_response = r.content.decode()\n        # 读取json\n        json_response = dict_style(str_response)\n        # 校验状态码是否是200\n        test_assert.assert_code(code1, 200)\n        # 校验返回信息是否与预期信息一致\n>       test_assert.assert_body(json_response, 'msg', '')\n\n..\\test_case\\Login_case.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x00000146A6099700>\nbody = {'code': 'RequestParameterIsWrong', 'data': None, 'debug_error': '', 'msg': '连续超过 5 次错误，请于 15 分钟后重新登录'}\nbody_msg = 'msg', expected_msg = ''\n\n    def assert_body(self, body, body_msg, expected_msg):\n        \"\"\"\n        验证response body任意属性的值\n        :param body:\n        :param body_msg:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n            msg = body[body_msg]\n>           assert msg == expected_msg\nE           AssertionError\n\n..\\common\\Assert.py:46: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f0d09ca6599c3e76",
      "name" : "log",
      "source" : "f0d09ca6599c3e76.txt",
      "type" : "text/plain",
      "size" : 340
    }, {
      "uid" : "d5da8b684c557996",
      "name" : "stderr",
      "source" : "d5da8b684c557996.txt",
      "type" : "text/plain",
      "size" : 479
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "短信登录"
  }, {
    "name" : "feature",
    "value" : "登录模块"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "Login_case"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "DESKTOP-KSOAST3"
  }, {
    "name" : "thread",
    "value" : "13444-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.Login_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "6aea65412f6a7ad6.json",
  "parameterValues" : [ ]
}