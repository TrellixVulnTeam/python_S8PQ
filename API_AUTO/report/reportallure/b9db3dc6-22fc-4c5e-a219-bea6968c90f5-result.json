{"name": "创建实例时GPU不足", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'DatabaseError' == 'InternalError'\n  - InternalError\n  + DatabaseError", "trace": "self = <testCases.test_InstanceCase.TestCreatInstance object at 0x000002852F538640>\ntitle = '创建实例时GPU不足'\ninBody = {'instance_info': {'charge_type': 'payg', 'image': 'hub.kce.ksyun.com/autodl-image/torch:cuda11.0-cudnn8-devel-ubuntu1...: '', 'machine_id': 'None', ...}, 'price_info': {'charge_type': 'payg', 'duration': 1, 'machine_id': 'None', 'num': 1}}\nexpData = {'code': 'InternalError', 'msg': '机器空闲GPU不足'}\n\n    @allure.story('创建实例接口')  # 接口名称\n    @pytest.mark.parametrize('title,inBody,expData', get_CreatInstance_yaml_data(data_path + 'InstanceCreateCase.yaml'))\n    @allure.title(\"{title}\")\n    def test_instance(self, title, inBody, expData):\n        resData = InstanceCreat().creat_instance(inData=inBody)\n        logger.info(f'当前用例名称：{title}')\n        logger.info(f'当前测试用例请求参数：{inBody}')\n        logger.info(f'当前用例预期结果：{expData}')\n        logger.info(f'当前用例实际结果：{resData}\\n')\n        try:\n            self.define_assert(resData, expData)\n        except AssertionError as e:\n            logger.error(f'用例执行失败{e}')\n>           raise e\n\n..\\testCases\\test_InstanceCase.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\testCases\\test_InstanceCase.py:44: in test_instance\n    self.define_assert(resData, expData)\n..\\common\\Assert.py:111: in define_assert\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'testCases.test_InstanceCase.TestCreatInstance'>\nres = {'code': 'DatabaseError', 'data': None, 'debug_error': '', 'msg': '服务异常，请稍后重试'}\nrespData = {'code': 'InternalError', 'msg': '机器空闲GPU不足'}\n\n    @classmethod  # 使用类名就可以直接调用类方法\n    def define_assert(cls, res, respData):\n        try:\n            if 'code' in respData:\n>               assert res['code'] == respData['code']\nE               AssertionError: assert 'DatabaseError' == 'InternalError'\nE                 - InternalError\nE                 + DatabaseError\n\n..\\common\\Assert.py:104: AssertionError"}, "attachments": [{"name": "log", "source": "dea1bda1-5eb2-4f65-bb72-33260cffc810-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'创建实例时GPU不足'"}, {"name": "inBody", "value": "{'instance_info': {'charge_type': 'payg', 'image': 'hub.kce.ksyun.com/autodl-image/torch:cuda11.0-cudnn8-devel-ubuntu18.04-py38-torch1.7.0', 'machine_id': 'None', 'instance_name': '', 'req_gpu_amount': 1}, 'price_info': {'charge_type': 'payg', 'duration': 1, 'machine_id': 'None', 'num': 1}}"}, {"name": "expData", "value": "{'code': 'InternalError', 'msg': '机器空闲GPU不足'}"}], "start": 1647423140657, "stop": 1647423141210, "uuid": "23707dcf-87a3-4685-80fb-37279267f224", "historyId": "e8f3792aff031d706eca47283485aa71", "testCaseId": "3fd1c7ea7d65311b7be4c31e4be8f5bd", "fullName": "testCases.test_InstanceCase.TestCreatInstance#test_instance", "labels": [{"name": "feature", "value": "实例模块"}, {"name": "story", "value": "创建实例接口"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_InstanceCase"}, {"name": "subSuite", "value": "TestCreatInstance"}, {"name": "host", "value": "DESKTOP-KSOAST3"}, {"name": "thread", "value": "5836-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_InstanceCase"}]}