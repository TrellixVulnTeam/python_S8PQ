{"name": "GPU不足，实例开机", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'RecordNotFoundError' == 'InternalError'\n  - InternalError\n  + RecordNotFoundError", "trace": "self = <testCases.test_InstancePowerOnCase.TestInstancePowerOn object at 0x000002852F538430>\ntitle = 'GPU不足，实例开机', inBody = {'instance_uuid': 'None', 'payload': ''}\nexpData = {'code': 'InternalError', 'msg': '机器空闲GPU不足'}\n\n    @allure.story('实例开机接口')  # 接口名称\n    @pytest.mark.parametrize('title,inBody,expData', get_InstancePowerOn_yaml_data(data_path + 'InstancePowerOnCase.yaml'))\n    @allure.title(\"{title}\")\n    def test_instance_power_on(self, title, inBody, expData):\n        resData = InstancePowerOn().instance_power_on(inData=inBody)\n        logger.info(f'当前用例名称：{title}')\n        logger.info(f'当前测试用例请求参数：{inBody}')\n        logger.info(f'当前用例预期结果：{expData}')\n        logger.info(f'当前用例实际结果：{resData}\\n')\n        try:\n            self.define_assert(resData, expData)\n        except AssertionError as e:\n            logger.error(f'用例执行失败{e}')\n>           raise e\n\n..\\testCases\\test_InstancePowerOnCase.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\testCases\\test_InstancePowerOnCase.py:34: in test_instance_power_on\n    self.define_assert(resData, expData)\n..\\common\\Assert.py:111: in define_assert\n    raise error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'testCases.test_InstancePowerOnCase.TestInstancePowerOn'>\nres = {'code': 'RecordNotFoundError', 'data': None, 'debug_error': '', 'msg': '未查询到相关实例'}\nrespData = {'code': 'InternalError', 'msg': '机器空闲GPU不足'}\n\n    @classmethod  # 使用类名就可以直接调用类方法\n    def define_assert(cls, res, respData):\n        try:\n            if 'code' in respData:\n>               assert res['code'] == respData['code']\nE               AssertionError: assert 'RecordNotFoundError' == 'InternalError'\nE                 - InternalError\nE                 + RecordNotFoundError\n\n..\\common\\Assert.py:104: AssertionError"}, "attachments": [{"name": "log", "source": "4f36e079-b1c9-4d8e-9067-5e0833777203-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "title", "value": "'GPU不足，实例开机'"}, {"name": "inBody", "value": "{'instance_uuid': 'None', 'payload': ''}"}, {"name": "expData", "value": "{'code': 'InternalError', 'msg': '机器空闲GPU不足'}"}], "start": 1647423141999, "stop": 1647423142590, "uuid": "ff5a4ed7-a0e9-4637-8002-7c867becde6f", "historyId": "8521245793ca8d581874c2152779d326", "testCaseId": "9893e08b27992e748913772655bb61a7", "fullName": "testCases.test_InstancePowerOnCase.TestInstancePowerOn#test_instance_power_on", "labels": [{"name": "story", "value": "实例开机接口"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_InstancePowerOnCase"}, {"name": "subSuite", "value": "TestInstancePowerOn"}, {"name": "host", "value": "DESKTOP-KSOAST3"}, {"name": "thread", "value": "5836-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_InstancePowerOnCase"}]}